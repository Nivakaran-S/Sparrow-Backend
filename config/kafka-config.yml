spring:
  kafka:
    bootstrap-servers: ${KAFKA_BROKER:kafka:29092}
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.springframework.kafka.support.serializer.JsonSerializer
      acks: all
      retries: 3
      batch-size: 16384
      linger-ms: 1
      buffer-memory: 33554432
      properties:
        max.in.flight.requests.per.connection: 5
        enable.idempotence: true
    consumer:
      group-id: ${APP_NAME:default-group}
      auto-offset-reset: earliest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.springframework.kafka.support.serializer.JsonDeserializer
      enable-auto-commit: true
      auto-commit-interval: 1000
      max-poll-records: 500
      properties:
        spring.json.trusted.packages: "*"
        spring.json.type.mapping: >
          user.created:com.logistics.events.UserCreatedEvent,
          parcel.created:com.logistics.events.ParcelCreatedEvent,
          parcel.updated:com.logistics.events.ParcelUpdatedEvent,
          tracking.updated:com.logistics.events.TrackingUpdatedEvent,
          notification.sent:com.logistics.events.NotificationSentEvent,
          location.updated:com.logistics.events.LocationUpdatedEvent

# Kafka Topics Configuration
kafka:
  topics:
    user-events: user-events
    parcel-events: parcel-events
    tracking-events: tracking-events
    notification-events: notification-events
    location-events: location-events
    chatbot-events: chatbot-events
    eta-events: eta-events
  
  # Topic Properties
  topic:
    partitions: 3
    replication-factor: 1
    
logging:
  level:
    org.apache.kafka: INFO
    org.springframework.kafka: DEBUG